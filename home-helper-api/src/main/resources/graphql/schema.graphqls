type Query {
    # お手伝い項目を取得します。
    helpItems(param: SearchHelpItemParam): [HelpItem]
    helpItem(id: ID): HelpItem

    # お手伝いポイント獲得実績を取得します。
    helpPointEarnedAchievement(param: SearchHelpPointParam): [HelpPointEarnedAchievement]

    # 交換品を取得します。
    exchangeItems(param: SearchExchangeItemParam): [ExchangeItem]

    # ユーザを取得します。
    users(param: SearchUserParam): [User]
    user(userId: ID!): User
}

type Mutation {
    # お手伝い項目を登録します。
    registerHelpItem(param: RegisterHelpItemParam): [String]
}

input SearchHelpItemParam {
    pointFrom: Int
    pointTo: Int
}

input RegisterHelpItemParam {
    name: String!
    point: Int!
    memo: String
}

input SearchHelpPointParam {
    userId: ID
}

input SearchExchangeItemParam {
    id: String
}

input SearchUserParam {
    userId: ID
}

type HelpPointEarnedAchievement{
    id: ID!,
    userId: Int!,
    earnedDate: String!,
    earnedPoint: Int!,
    helpItems: [HelpItem],
}

type HelpItem {
    id: ID!
    name: String!
    point: Int!
    memo: String
}

type ExchangeItem {
    id: ID!
    name: String!
    point: String!
}

type User {
    id: ID!
    name: String!
    currentPoint: Int!
    lastHelp: String!
}