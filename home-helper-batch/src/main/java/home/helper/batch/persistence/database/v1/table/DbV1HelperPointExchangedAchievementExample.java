/*
 * Copyright (c) 2023 Ryo-Kgym.
 */

package home.helper.batch.persistence.database.v1.table;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class DbV1HelperPointExchangedAchievementExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public DbV1HelperPointExchangedAchievementExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andHelpPointExchangedAchievementIdIsNull() {
            addCriterion("help_point_exchanged_achievement_id is null");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdIsNotNull() {
            addCriterion("help_point_exchanged_achievement_id is not null");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdEqualTo(String value) {
            addCriterion("help_point_exchanged_achievement_id =", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdNotEqualTo(String value) {
            addCriterion("help_point_exchanged_achievement_id <>", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdGreaterThan(String value) {
            addCriterion("help_point_exchanged_achievement_id >", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdGreaterThanOrEqualTo(String value) {
            addCriterion("help_point_exchanged_achievement_id >=", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdLessThan(String value) {
            addCriterion("help_point_exchanged_achievement_id <", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdLessThanOrEqualTo(String value) {
            addCriterion("help_point_exchanged_achievement_id <=", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdLike(String value) {
            addCriterion("help_point_exchanged_achievement_id like", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdNotLike(String value) {
            addCriterion("help_point_exchanged_achievement_id not like", value, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdIn(List<String> values) {
            addCriterion("help_point_exchanged_achievement_id in", values, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdNotIn(List<String> values) {
            addCriterion("help_point_exchanged_achievement_id not in", values, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdBetween(String value1, String value2) {
            addCriterion("help_point_exchanged_achievement_id between", value1, value2, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelpPointExchangedAchievementIdNotBetween(String value1, String value2) {
            addCriterion("help_point_exchanged_achievement_id not between", value1, value2, "helpPointExchangedAchievementId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdIsNull() {
            addCriterion("helper_kid_id is null");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdIsNotNull() {
            addCriterion("helper_kid_id is not null");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdEqualTo(String value) {
            addCriterion("helper_kid_id =", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdNotEqualTo(String value) {
            addCriterion("helper_kid_id <>", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdGreaterThan(String value) {
            addCriterion("helper_kid_id >", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdGreaterThanOrEqualTo(String value) {
            addCriterion("helper_kid_id >=", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdLessThan(String value) {
            addCriterion("helper_kid_id <", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdLessThanOrEqualTo(String value) {
            addCriterion("helper_kid_id <=", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdLike(String value) {
            addCriterion("helper_kid_id like", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdNotLike(String value) {
            addCriterion("helper_kid_id not like", value, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdIn(List<String> values) {
            addCriterion("helper_kid_id in", values, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdNotIn(List<String> values) {
            addCriterion("helper_kid_id not in", values, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdBetween(String value1, String value2) {
            addCriterion("helper_kid_id between", value1, value2, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andHelperKidIdNotBetween(String value1, String value2) {
            addCriterion("helper_kid_id not between", value1, value2, "helperKidId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdIsNull() {
            addCriterion("exchange_item_id is null");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdIsNotNull() {
            addCriterion("exchange_item_id is not null");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdEqualTo(String value) {
            addCriterion("exchange_item_id =", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdNotEqualTo(String value) {
            addCriterion("exchange_item_id <>", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdGreaterThan(String value) {
            addCriterion("exchange_item_id >", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdGreaterThanOrEqualTo(String value) {
            addCriterion("exchange_item_id >=", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdLessThan(String value) {
            addCriterion("exchange_item_id <", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdLessThanOrEqualTo(String value) {
            addCriterion("exchange_item_id <=", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdLike(String value) {
            addCriterion("exchange_item_id like", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdNotLike(String value) {
            addCriterion("exchange_item_id not like", value, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdIn(List<String> values) {
            addCriterion("exchange_item_id in", values, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdNotIn(List<String> values) {
            addCriterion("exchange_item_id not in", values, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdBetween(String value1, String value2) {
            addCriterion("exchange_item_id between", value1, value2, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeItemIdNotBetween(String value1, String value2) {
            addCriterion("exchange_item_id not between", value1, value2, "exchangeItemId");
            return (Criteria) this;
        }

        public Criteria andExchangeCountIsNull() {
            addCriterion("exchange_count is null");
            return (Criteria) this;
        }

        public Criteria andExchangeCountIsNotNull() {
            addCriterion("exchange_count is not null");
            return (Criteria) this;
        }

        public Criteria andExchangeCountEqualTo(Integer value) {
            addCriterion("exchange_count =", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountNotEqualTo(Integer value) {
            addCriterion("exchange_count <>", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountGreaterThan(Integer value) {
            addCriterion("exchange_count >", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("exchange_count >=", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountLessThan(Integer value) {
            addCriterion("exchange_count <", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountLessThanOrEqualTo(Integer value) {
            addCriterion("exchange_count <=", value, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountIn(List<Integer> values) {
            addCriterion("exchange_count in", values, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountNotIn(List<Integer> values) {
            addCriterion("exchange_count not in", values, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountBetween(Integer value1, Integer value2) {
            addCriterion("exchange_count between", value1, value2, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeCountNotBetween(Integer value1, Integer value2) {
            addCriterion("exchange_count not between", value1, value2, "exchangeCount");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointIsNull() {
            addCriterion("exchange_total_point is null");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointIsNotNull() {
            addCriterion("exchange_total_point is not null");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointEqualTo(Integer value) {
            addCriterion("exchange_total_point =", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointNotEqualTo(Integer value) {
            addCriterion("exchange_total_point <>", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointGreaterThan(Integer value) {
            addCriterion("exchange_total_point >", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointGreaterThanOrEqualTo(Integer value) {
            addCriterion("exchange_total_point >=", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointLessThan(Integer value) {
            addCriterion("exchange_total_point <", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointLessThanOrEqualTo(Integer value) {
            addCriterion("exchange_total_point <=", value, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointIn(List<Integer> values) {
            addCriterion("exchange_total_point in", values, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointNotIn(List<Integer> values) {
            addCriterion("exchange_total_point not in", values, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointBetween(Integer value1, Integer value2) {
            addCriterion("exchange_total_point between", value1, value2, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangeTotalPointNotBetween(Integer value1, Integer value2) {
            addCriterion("exchange_total_point not between", value1, value2, "exchangeTotalPoint");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeIsNull() {
            addCriterion("exchanged_datetime is null");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeIsNotNull() {
            addCriterion("exchanged_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeEqualTo(LocalDateTime value) {
            addCriterion("exchanged_datetime =", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeNotEqualTo(LocalDateTime value) {
            addCriterion("exchanged_datetime <>", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeGreaterThan(LocalDateTime value) {
            addCriterion("exchanged_datetime >", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("exchanged_datetime >=", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeLessThan(LocalDateTime value) {
            addCriterion("exchanged_datetime <", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("exchanged_datetime <=", value, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeIn(List<LocalDateTime> values) {
            addCriterion("exchanged_datetime in", values, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeNotIn(List<LocalDateTime> values) {
            addCriterion("exchanged_datetime not in", values, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("exchanged_datetime between", value1, value2, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andExchangedDatetimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("exchanged_datetime not between", value1, value2, "exchangedDatetime");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNull() {
            addCriterion("group_id is null");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNotNull() {
            addCriterion("group_id is not null");
            return (Criteria) this;
        }

        public Criteria andGroupIdEqualTo(String value) {
            addCriterion("group_id =", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotEqualTo(String value) {
            addCriterion("group_id <>", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThan(String value) {
            addCriterion("group_id >", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThanOrEqualTo(String value) {
            addCriterion("group_id >=", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThan(String value) {
            addCriterion("group_id <", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThanOrEqualTo(String value) {
            addCriterion("group_id <=", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLike(String value) {
            addCriterion("group_id like", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotLike(String value) {
            addCriterion("group_id not like", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdIn(List<String> values) {
            addCriterion("group_id in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotIn(List<String> values) {
            addCriterion("group_id not in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdBetween(String value1, String value2) {
            addCriterion("group_id between", value1, value2, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotBetween(String value1, String value2) {
            addCriterion("group_id not between", value1, value2, "groupId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table helper_kids.help_point_exchanged_achievement
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}